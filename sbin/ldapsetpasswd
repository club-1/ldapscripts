#!/bin/sh

#  ldapsetpasswd : modifies a POSIX user or machine account's password in LDAP

#  Copyright (C) 2006-2017 GanaÃ«l LAPLANCHE
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
#  USA.

if [ -z "$1" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]
then
  echo "Usage : $0 [-u | -m] <username | machinename | uid> [encoded password]"
  exit 1
fi

# Source runtime file
_RUNTIMEFILE="/usr/lib/ldapscripts/runtime"
. "$_RUNTIMEFILE"

# Parse options
case "$1" in
  "-u" | "-m")
    [ -z "$2" ] && end_die 'Please specify a gid or groupname'
    _USER="$2"
    _PASSWD="$3"
    ;;
  *)
    _USER="$1"
    _PASSWD="$2"
    ;;
esac

# Find account : $_USER must exist in LDAP !
case "$1" in
  "-u")
    _findentry "$USUFFIX,$SUFFIX" "(&(objectClass=posixAccount)(|(uid=$_USER)(uidNumber=$_USER)))"
    ;;
  "-m")
    _findentry "$MSUFFIX,$SUFFIX" "(&(objectClass=posixAccount)(|(uid=$_USER)(uidNumber=$_USER)))"
    ;;
  *)
    _findentry "$SUFFIX" "(&(objectClass=posixAccount)(|(uid=$_USER)(uidNumber=$_USER)))"
    ;;
esac
[ -z "$_ENTRY" ] && end_die "Account $_USER not found in LDAP"

if [ -z "$_PASSWD" ] # Have to prompt for a *clear* password
then
  warn_log "Changing password for account $_ENTRY"
  # Ask for password
  _askpassword
  [ -z "$_PASSWORD" ] && end_die "Invalid password, please try again"
  # Change account password
  _changepassword "$_PASSWORD" "$_ENTRY"
  [ $? -eq 0 ] || end_die "Error setting password for account $_ENTRY"
  end_ok "Successfully set password for account $_ENTRY"
else # Have to use the *encoded* password given on the command line
  # Use LDIF info to modify the password
  _PASSWORD="$_PASSWD"
  _extractldif 2 | _filterldif | _utf8encode | _ldapmodify
  [ $? -eq 0 ] || end_die "Error setting encoded password for account $_ENTRY"
  end_ok "Successfully set encoded password for account $_ENTRY"
fi

# Ldif template ##################################
##dn: <entry>
##changetype: modify
##replace: userPassword
##userPassword: <password>
